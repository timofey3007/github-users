version: "3.5"

services:
  web:
    image: nginx
    container_name: web
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:cached
      - ./docker/log/nginx:/var/log/nginx
      - ./project:/application
    ports:
      - 80:80
    environment:
      NGINX_HOST: ${NGINX_HOST}
    command: /bin/bash -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - laravel

  laravel:
    image: lenalltd/laravel
    container_name: laravel
    restart: always
    ports:
      - 9000:9000
    volumes:
      - ./project:/application:cached
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini:cached
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_DATABASE: $DB_NAME
      DB_USERNAME: $DB_USER
      DB_PASSWORD: $DB_PASS
      GITHUB_USERNAME: $GITHUB_USERNAME
      GITHUB_PASSWORD: $GITHUB_PASSWORD
    entrypoint: bash -c "composer install && php artisan key:generate && (php artisan horizon &) && php-fpm"
    depends_on:
      - db
      - redis

  db:
    image: postgres:10
    container_name: postgres
    restart: always
    ports:
      - $DB_PORT:5432
    volumes:
      - db_postgres:/var/lib/postgresql/data:delegated
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASS

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - $REDIS_HOST:6379
    volumes:
      - redis_storage:/data

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    links:
      - db:db

volumes:
  db_postgres:
  redis_storage:
